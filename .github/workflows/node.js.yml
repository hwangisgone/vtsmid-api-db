# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js Continuous Integration

on:
  push:
    branches-ignore: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          # Default database created
          POSTGRES_DB: VTS-TEST
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/ 16.x, 18.x, 

    steps:
    - name: Check out
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install npm dependencies
      run: npm ci

    - name: Connect and test PostgreSQL
      run: node ./tests/postgres-client.cjs
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432

    - run: npm run build --if-present

    - name: Test APIs
      run: npm test
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
